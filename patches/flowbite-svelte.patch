diff --git a/dist/datepicker/Datepicker.svelte b/dist/datepicker/Datepicker.svelte
index 786d297daf1e9af3b4f93465547e3acb54546049..4c6317f184bf61811b9571cc992806392acb8844 100644
--- a/dist/datepicker/Datepicker.svelte
+++ b/dist/datepicker/Datepicker.svelte
@@ -1,50 +1,124 @@
 <script context="module"></script>
 
-<script>import Calendar from "./Calender.svelte";
-export let range = false;
-export let datepickerButtons = false;
-export let datepickerFormat = "mm/dd/yyyy";
-export let datepickerOrientation = "bottom";
-export let datepickerTitle = "Flowbite datepicker";
-export let attribute = "";
-export let inputClass = "bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
-$: setAttribute = (node, params) => {
-  if (params) {
-    node.setAttribute(params, "");
-  }
-};
+<script>
+  import { createEventDispatcher } from "svelte";
+
+  import Calendar from "./Calender.svelte";
+
+  export let range = false;
+  export let datepickerButtons = false;
+  export let datepickerFormat = "mm/dd/yyyy";
+  export let datepickerOrientation = "bottom";
+  export let datepickerTitle = "Flowbite datepicker";
+  export let attribute = "";
+  export let inputClass =
+    "bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500";
+  $: setAttribute = (node, params) => {
+    if (params) {
+      node.setAttribute(params, "");
+    }
+  };
+
+  /** @type {string[]} */
+  export let values = new Array(2);
+
+  /**
+   *
+   * @param index 업데이트 할 배열 인덱스
+   * @param value 업데이트 할 값
+   */
+  const updateValue = (index, value) => {
+    if (!(Number.isSafeInteger(index) && 0 <= index && index < 2)) return;
+
+    const newValues = [...values];
+    newValues[index] = value;
+    // NOTE: Svelte는 할당 연산에 대해서만 반응함
+    values = newValues;
+  };
 </script>
 
 <svelte:head>
-  <link rel="stylesheet" href="https://unpkg.com/flowbite@1.5.1/dist/flowbite.min.css" />
+  <link
+    rel="stylesheet"
+    href="https://unpkg.com/flowbite@1.5.1/dist/flowbite.min.css"
+  />
   <script src="https://unpkg.com/flowbite@1.5.1/dist/datepicker.js"></script>
 </svelte:head>
 
 {#if range}
   <div date-rangepicker class="flex items-center">
     <div class="relative">
-      <div class="flex absolute inset-y-0 start-0 items-center ps-3 pointer-events-none">
+      <div
+        class="flex absolute inset-y-0 start-0 items-center ps-3 pointer-events-none"
+      >
         <Calendar />
       </div>
-      <input name="start" type="text" class={inputClass} placeholder="Select date start" />
+      <input
+        name="start"
+        type="text"
+        class={inputClass}
+        placeholder="Select date start"
+        on:input|preventDefault={(ev) => {
+          updateValue(0, ev.currentTarget.value);
+        }}
+      />
     </div>
     <span class="mx-4 text-gray-500">to</span>
     <div class="relative">
-      <div class="flex absolute inset-y-0 start-0 items-center ps-3 pointer-events-none">
+      <div
+        class="flex absolute inset-y-0 start-0 items-center ps-3 pointer-events-none"
+      >
         <Calendar />
       </div>
-      <input name="end" type="text" class={inputClass} placeholder="Select date end" />
+      <input
+        name="end"
+        type="text"
+        class={inputClass}
+        placeholder="Select date end"
+        on:input|preventDefault={(ev) => {
+          updateValue(1, ev.currentTarget.value);
+        }}
+      />
     </div>
   </div>
 {:else}
   <div class="relative">
-    <div class="flex absolute inset-y-0 start-0 items-center ps-3 pointer-events-none">
+    <div
+      class="flex absolute inset-y-0 start-0 items-center ps-3 pointer-events-none"
+    >
       <Calendar />
     </div>
     {#if datepickerButtons}
-      <input {...$$restProps} datepicker datepicker-buttons datepicker-format={datepickerFormat} datepicker-orientation={datepickerOrientation} datepicker-title={datepickerTitle} use:setAttribute={attribute} type="text" class={inputClass} placeholder="Select date" />
+      <input
+        {...$$restProps}
+        datepicker
+        datepicker-buttons
+        datepicker-format={datepickerFormat}
+        datepicker-orientation={datepickerOrientation}
+        datepicker-title={datepickerTitle}
+        use:setAttribute={attribute}
+        type="text"
+        class={inputClass}
+        placeholder="Select date"
+        on:input|preventDefault={(ev) => {
+          updateValue(0, ev.currentTarget.value);
+        }}
+      />
     {:else}
-      <input {...$$restProps} datepicker datepicker-format={datepickerFormat} datepicker-orientation={datepickerOrientation} datepicker-title={datepickerTitle} use:setAttribute={attribute} type="text" class={inputClass} placeholder="Select date" />
+      <input
+        {...$$restProps}
+        datepicker
+        datepicker-format={datepickerFormat}
+        datepicker-orientation={datepickerOrientation}
+        datepicker-title={datepickerTitle}
+        use:setAttribute={attribute}
+        type="text"
+        class={inputClass}
+        placeholder="Select date"
+        on:input|preventDefault={(ev) => {
+          updateValue(0, ev.currentTarget.value);
+        }}
+      />
     {/if}
     <slot />
   </div>
